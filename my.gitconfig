[user]
	name = Peter Coombe

[credential]
	helper = manager
[http]
	sslBackend = schannel
	schannelCheckRevoke = false
[core]
	editor = notepad
	whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
	excludesfile = ~/.gitignore-rab
	autocrlf = true
[diff]
	guitool = winmerge
	tool = vsdiffmerge
	algorithm = histogram
	colorMoved = plain
	mnemonicPrefix = true
[difftool]
	prompt = true
[difftool "winmerge"]
	path = \"C:/Program Files (x86)/WinMerge/WinMergeU.exe\"
	cmd = \"C:/Program Files (x86)/WinMerge/WinMergeU.exe\" -e -u \"$LOCAL\" \"$REMOTE\"
[difftool "vsdiffmerge"]
	cmd = \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\\vsdiffmerge.exe\" \"$LOCAL\" \"$REMOTE\" //t
	keepBackup = false
[merge]
	tool = vsdiffmerge
	guitool = vsdiffmerge
[mergetool]
	prompt = true
	keepBackup = false
	keepTemporaries = false
[mergetool "winmerge"]
	trustExitCode = true
	path = \"C:/Program Files (x86)/WinMerge/WinMergeU.exe\"
	cmd = \"C:/Program Files (x86)/WinMerge/WinMergeU.exe\" -u -e -dl \"Source\" -dr \"Target\" $LOCAL $REMOTE $MERGED
[mergetool "vsdiffmerge"]
	path = \"C:/Program Files/Microsoft Visual Studio/2022/Enterprise/Common7/IDE/CommonExtensions/Microsoft/TeamFoundation/Team Explorer/vsdiffmerge.exe\"
	cmd = \"C:/Program Files/Microsoft Visual Studio/2022/Enterprise/Common7/IDE/CommonExtensions/Microsoft/TeamFoundation/Team Explorer/vsdiffmerge.exe\" \"$REMOTE\" \"$LOCAL\" \"$BASE\" \"$MERGED\" //m
	keepBackup = false
	trustExitCode = true
[color]
	branch = auto
	diff = auto
	status = auto
	showbranch = auto
	ui = true
[color "branch"]
	current = cyan reverse
	local = yellow bold
	remote = green
[color "diff"]
	meta = cyan
	frag = blue bold
	old = red bold
	new = green bold
[color "status"]
	added = green
	changed = magenta
	untracked = cyan
[log]
	date = short
[format]
	pretty = '%C(yellow)%h%Creset %C(magenta)%cd%Creset %d %s'
[tag]
        sort = version:refname	
[apply]
	whitespace = nowarn
[branch]
	autosetuprebase = always
[push]
	default = simple
[pull]
	rebase = true
[fetch]
	prune = true
	pruneTags = true
[rebase]
	autoStash = true
	autosquash = false
	updateRefs = true
	
[alias]
	a = config --get-regexp alias
	ec = config --global -e
	st = status -sb
	cm = !git add -A && git commit -m
	ca = commit --amend --no-edit
	cl = clean -fdx
	co = "!f(){ git checkout \"$@\" && git smu; }; f"
	cob = checkout -b
	cor = "!f(){ git checkout -b \"$@\" \"origin/$@\" && git smu; }; f"
	br = branch
	bl = branch -a --list
	bd = branch -d
	bn = rev-parse --abbrev-ref HEAD
	mn = !git remote show origin | sed -n '/HEAD branch/s/.*: //p'
	sl = stash list
	sa = stash apply
	ss = stash save
	sc = stash clear
	dt = difftool --no-prompt --gui
	df = diff --color-words='[^[:space:]]'
	sh = show --color-words='[^[:space:]]'
	up = !git pull --rebase --prune --autostash $@ && git smu && git bclean
	rb = "!f() { git fetch && git rebase ${1-$(git mn)}; }; f"
	ui = "!f() { gitextensions browse . &}; f"
	comu = !git co $(git mn) && git up
	smu = submodule update --init --recursive
	smur = submodule update --init --recursive --remote
	smb = !git submodule foreach -q --recursive 'git checkout $(git config -f $toplevel/.gitmodules submodule.$name.branch || echo $(git bn))'
	graph = log --graph --oneline --decorate=short --branches='*'
	new = !git init && git commit -mroot--allow-empty
	save = !git add -A && git commit -m 'SAVEPOINT'
	undo = reset HEAD~1 --mixed
	wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
	rename = branch -m
	flush = !git clean -dxf && git remote prune origin && git gc
	bclean = "!f() { git branch --merged ${1-$(git mn)} | grep -v $(git mn) | xargs -r git branch -d; }; f"
	bdone = "!f() { git checkout ${1-$(git mn)} && git up && git bclean ${1-$(git mn)}; }; f"
	bcomp = "!f() { git diff ${2-$(git mn)} ${1}; }; f"
	serve = !git daemon --reuseaddr --verbose --base-path=. --export-all ./.git
	devops = "!f() { REPO_URL=$(git config remote.origin.url); explorer ${REPO_URL%%.git}; }; f"
	publish = !git push -u origin $(git bn)
	fpush = push --force-with-lease
[gui]